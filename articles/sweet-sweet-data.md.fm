---
id: sweet-sweet-data
title: Measure Happy
published: 2017-01-29T15:50-0800
series: An Engineer's Site
installment: 4
code: https://github.com/aztecrex/engineer-site
---
# Measure Happy

Or _Sweet, Sweet Data_

This is a followon to the original "Adventures in Tech Blogging"
and other articles about publishing a cheap hassle-free web site
for an engineer. All the code is on
[GitHub](https://github.com/aztecrex/engineer-site).

## Google Analytics

I work for a [company](http://engineering.cj.com) that tracks
and processes web activity. It would be embarrassing if I wasn't
measuring my traffic. I still didn't expect anyone to actually visit
the site but I thought I'd add Google Analytics tracking just to
see.


## Too Easy

I found an NPM package, _react-ga_. All it required was a couple lines
of code and a listener on React Route update.  Great. Done. Wait, what's
this tracking id thing it needs?

I went to Google and signed up for the Google Analytics program. I
gave them my website URL (good thing I had the foresight to redirect
all traffic to one hostname). That gave me the ID I needed to initialize
the tracking library.

## Well

I published the site, visited it, and ran over to the GA dashboard to
see if I had a hit.  I did not. I refreshed and looked again, nope.
I put a trace on the firing code and saw that there was no data being
sent in the tracking call. Huh?

The problem was that I was sending something called `window.location.hash` as the data to send.  I got that from a
react-ga sample I found.  In my browser, that just returned nothing.
I dig into the docs to see what I was supposed to be sending. It was
called path so I changed the code to send `window.location.pathname`
instead. Now it was firing with data.

Here is the fully-google-analytics-enabled-router:

```javasript
import {googleTrackingId} from '../secrets.js';
ReactGA.initialize(googleTrackingId);

function fireTracking() {
    ReactGA.pageview(window.location.pathname);
}

const Root = () => (
    <Provider store={store}>
      <Router history={browserHistory} onUpdate={fireTracking}>
      <!-- ... -->
      </Router>
    </Provider>
  );
```


# Now?

I went back to the dashboard. Traffic? No. Ok, maybe there was some
latency. I dug into the docs and learned there is a 24-48 hour lag
between firing a tracking event and it showing on the dashboard.  Ok,
I'll be back tomorrow.

<iframe width="560" height="315" src="https://www.youtube.com/embed/QX_oy9614HQ" frameborder="0" allowfullscreen></iframe>

# Now??

It didn't take 24 hours. I was seeing tracking data on the GA
reports. Trouble now was that out of 10 sessions, 1 came from
Boston (thanks, Boston!) and 9 came from Thousand Oaks (where I
am). One hit was for this article which hadn't been published
yet. So clearly GA was capturing data fired during local testing.

It was easy to fix. Just check the `location` for `localhost` and
don't fire in that case.

# Measuring Up

I'm looking forward to tracking the traffic to the site. It is more
for fun than anything at this point. But if I do write something
popular, I'll know about it and that's a good feeling.

the end

